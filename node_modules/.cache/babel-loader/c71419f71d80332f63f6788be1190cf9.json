{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hel/Fiverr/dirto/src/components/contact/MapViewCluster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport useSwr from 'swr';\nimport GoogleMapReact from \"google-map-react\";\nimport useSupercluster from \"use-supercluster\"; // import googleMapStyles from '../common/GoogleMapStyle'\n\nimport mpIcon from '../../assets/images/map-marker.png';\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nconst Marker = ({\n  children\n}) => children;\n\n_c = Marker;\nexport default function MapViewCluster() {\n  _s();\n\n  // 1) map setup\n  const mapRef = useRef();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState(null); // 2) load and format data\n\n  const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.6376&lng=-1.135171&data=2019-10\";\n  const {\n    data,\n    error\n  } = useSwr(url, fetcher);\n  const crimes = data && !error ? data.slice(0, 9) : [];\n  const points = crimes.map(crime => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      category: crime.category\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(crime.location.longitude), parseFloat(crime.location.latitude)]\n    }\n  })); // 3) get clusters\n\n  const {\n    clusters,\n    supercluster\n  } = useSupercluster({\n    points,\n    bounds,\n    zoom,\n    options: {\n      radius: 75,\n      maxZoom: 20\n    }\n  }); // 4) render map\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container map-height w-100\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyAYzby4yYDVaXPmtu4jZAGR258K6IYwjIY&libraries'\n        },\n        defaultCenter: {\n          lat: 52.6376,\n          lng: -1.135171\n        },\n        defaultZoom: 12,\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: ({\n          map\n        }) => {\n          mapRef.current = map;\n        },\n        onChange: ({\n          zoom,\n          bounds\n        }) => {\n          setZoom(zoom);\n          setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n        },\n        children: clusters.map(cluster => {\n          const [longitude, latitude] = cluster.geometry.coordinates;\n          const {\n            cluster: isCluster,\n            point_count: pointCount\n          } = cluster.properties;\n\n          if (isCluster) {\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              lat: latitude,\n              lng: longitude,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cluster-marker\",\n                onClick: () => {\n                  const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 20);\n                  mapRef.current.setZoom(expansionZoom);\n                  mapRef.current.panTo({\n                    lat: latitude,\n                    lng: longitude\n                  });\n                },\n                children: pointCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, cluster.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            lat: latitude,\n            lng: longitude,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crime-marker\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: mpIcon,\n                alt: \"Icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)\n          }, cluster.properties.crimeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapViewCluster, \"Zsyu3ZL0Mh4sibLylTASNY8gOgE=\", false, function () {\n  return [useSwr, useSupercluster];\n});\n\n_c2 = MapViewCluster;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Marker\");\n$RefreshReg$(_c2, \"MapViewCluster\");","map":{"version":3,"sources":["/home/hel/Fiverr/dirto/src/components/contact/MapViewCluster.js"],"names":["React","useState","useRef","useSwr","GoogleMapReact","useSupercluster","mpIcon","fetcher","args","fetch","then","response","json","Marker","children","MapViewCluster","mapRef","zoom","setZoom","bounds","setBounds","url","data","error","crimes","slice","points","map","crime","type","properties","cluster","crimeId","id","category","geometry","coordinates","parseFloat","location","longitude","latitude","clusters","supercluster","options","radius","maxZoom","key","lat","lng","current","nw","se","isCluster","point_count","pointCount","expansionZoom","Math","min","getClusterExpansionZoom","panTo"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react';\nimport useSwr from 'swr'\nimport GoogleMapReact from \"google-map-react\"\nimport useSupercluster from \"use-supercluster\";\n// import googleMapStyles from '../common/GoogleMapStyle'\nimport mpIcon from '../../assets/images/map-marker.png'\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nconst Marker = ({children}) => children;\n\nexport default function MapViewCluster() {\n\n    // 1) map setup\n    const mapRef = useRef();\n    const [zoom, setZoom] = useState(10);\n    const [bounds, setBounds] = useState(null);\n\n    // 2) load and format data\n    const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.6376&lng=-1.135171&data=2019-10\";\n    const { data, error } = useSwr(url, fetcher);\n    const crimes = data && !error ? data.slice(0, 9) : [];\n    const points = crimes.map(crime => ({\n        type: \"Feature\",\n        properties: {\n            cluster: false,\n            crimeId: crime.id,\n            category: crime.category\n        },\n        geometry: {\n            type: \"Point\",\n            coordinates: [\n                parseFloat(crime.location.longitude),\n                parseFloat(crime.location.latitude)\n            ]\n        }\n    }))\n\n    // 3) get clusters\n    const { clusters, supercluster } = useSupercluster({\n        points,\n        bounds,\n        zoom,\n        options: {radius: 75, maxZoom: 20}\n    });\n\n    // 4) render map\n    return (\n        <>\n            <div className=\"map-container map-height w-100\">\n                <GoogleMapReact\n                bootstrapURLKeys={{key: 'AIzaSyAYzby4yYDVaXPmtu4jZAGR258K6IYwjIY&libraries'}}\n                defaultCenter={{lat: 52.6376, lng: -1.135171}}\n                defaultZoom={12}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({map}) => {\n                    mapRef.current = map;\n                }}\n                onChange={({zoom, bounds}) => {\n                    setZoom(zoom);\n                    setBounds([\n                        bounds.nw.lng,\n                        bounds.se.lat,\n                        bounds.se.lng,\n                        bounds.nw.lat\n                    ])\n                }}\n                >\n                    {clusters.map(cluster => {\n                        const  [longitude, latitude]  = cluster.geometry.coordinates;\n                        const {\n                            cluster: isCluster,\n                            point_count: pointCount\n                        } = cluster.properties;\n\n                        if(isCluster) {\n                            return (\n                                <Marker key={cluster.id} lat={latitude} lng={longitude}>\n                                    <div\n                                        className=\"cluster-marker\"\n                                        onClick={() => {\n                                            const expansionZoom = Math.min(\n                                                supercluster.getClusterExpansionZoom(cluster.id), 20\n                                            );\n                                            mapRef.current.setZoom(expansionZoom);\n                                            mapRef.current.panTo({lat: latitude, lng: longitude})\n                                        }}\n                                    >{pointCount}</div>\n                                </Marker>\n                            )\n                        }\n                        return (\n                            <Marker\n                                key={cluster.properties.crimeId}\n                                lat={latitude}\n                                lng={longitude}>\n                                <div className=\"crime-marker\">\n                                    <img src={mpIcon} alt=\"Icon\"/>\n                                </div>\n                            </Marker>\n                        )\n                    })}\n                </GoogleMapReact>\n            </div>\n        </>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}